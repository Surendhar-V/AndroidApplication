// Generated by data binding compiler. Do not edit!
package com.example.qwerty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.qwerty.R;
import com.example.qwerty.interfaces.CategoryInterface;
import com.example.qwerty.model.Category;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CategoryItemBinding extends ViewDataBinding {
  @NonNull
  public final CircleImageView categoryImg;

  @NonNull
  public final TextView categoryText;

  @NonNull
  public final ConstraintLayout item;

  @Bindable
  protected Category mCategory;

  @Bindable
  protected CategoryInterface mCategroyInterface;

  protected CategoryItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CircleImageView categoryImg, TextView categoryText, ConstraintLayout item) {
    super(_bindingComponent, _root, _localFieldCount);
    this.categoryImg = categoryImg;
    this.categoryText = categoryText;
    this.item = item;
  }

  public abstract void setCategory(@Nullable Category category);

  @Nullable
  public Category getCategory() {
    return mCategory;
  }

  public abstract void setCategroyInterface(@Nullable CategoryInterface categroyInterface);

  @Nullable
  public CategoryInterface getCategroyInterface() {
    return mCategroyInterface;
  }

  @NonNull
  public static CategoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.category_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CategoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CategoryItemBinding>inflateInternal(inflater, R.layout.category_item, root, attachToRoot, component);
  }

  @NonNull
  public static CategoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.category_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CategoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CategoryItemBinding>inflateInternal(inflater, R.layout.category_item, null, false, component);
  }

  public static CategoryItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CategoryItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (CategoryItemBinding)bind(component, view, R.layout.category_item);
  }
}
